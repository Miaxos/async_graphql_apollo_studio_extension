name: Publish crate

on:
  workflow_run:
    workflows: ["On merge"]
    types:
      - completed

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Compute Version
        id: compute-version
        run: |
          VERSION=$(cat Cargo.toml | grep "version" | head -n 1 | cut -d'"' -f2)
          NAME=$(cat Cargo.toml | grep "name" | head -n 1 | cut -d'"' -f2)
          REF=${{ github.ref }}
          TAG=${{ github.ref }}-${{ github.sha }}

          echo "::set-output name=version::$VERSION"
          echo "::set-output name=name::$NAME"
          echo "::set-output name=ref::$REF"
          echo "::set-output name=tag::$TAG"

      - name: Create deployment
        id: deployment
        uses: actions/github-script@v3
        env:
          NAME: ${{ steps.compute-version.outputs.name }}
          VERSION: ${{ steps.compute-version.outputs.version }}
          REF: ${{ steps.compute-version.outputs.ref }}
          TAG: ${{ steps.compute-version.outputs.tag }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          previews: 'ant-man-preview,flash-preview'
          script: |
            const name = process.env.NAME;
            const version = process.env.VERSION;
            const ref = process.env.REF;

            const { data: deployment } = await github.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref,
              environment: 'Crates.io',
              auto_merge: false,
              required_contexts: [],
              description: `Published ${name}@${version} on crates.io`,
              payload: {
                name,
                version,
                tag: process.env.TAG,
              },
              production_environment: true,
            });

            console.log(`::set-output name=id::${deployment.id}`)
